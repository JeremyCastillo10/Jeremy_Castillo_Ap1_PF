@page "/C_TiposDocumentos"

@using Jeremy_Castillo_Ap1_PF.BLL;
@using Jeremy_Castillo_Ap1_PF.Entidades;

<EditForm Model="lista">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Consulta de Documentos</h3>
        </div>
        <div class="card-body">
            <form>
                <div class="input-group d-flex align-items-end">
                    <div class="flex-fill mx-2">
                        <label>Filtro</label>
                        <select class="form-control col-2" @bind="Filtro">
                            <option value="0">Tipo Documento Id</option>
                            <option value="1">Descripcion</option>
                        </select>
                    </div>
                    <div class="flex-fill mx-2">
                        <label>Criterio</label>
                        <input type="text" class="form-control" @bind="Criterio" />
                    </div>
                    <div class="flex-fill mx-2">
                        <label>desde</label>
                        <InputDate class="form-control" @bind-Value="desde" />
                    </div>

                    <div class="flex-fill mx-2">
                        <label>hasta</label>
                        <InputDate class="form-control" @bind-Value="hasta" />
                    </div>
                    
                    <button type="button" class="btn btn-warning" @onclick="Buscar">
                        <i class="oi oi-magnifying-glass mr-2"> Buscar</i>
                    </button>
                </div>
            </form>
        </div>
        <table class="table table-bordered">
            <thead  class="thead-darck">
                <tr class="table">
                    <th>Tipo Documento Id</th>
                    <th>Descripcion</th>
                    <th>Veces Asignado</th>
                    <th>Fecha</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in lista)
                {
                    <tr>
                        <td>@item.TipoDocumentoId</td>
                        <td>@item.Descripcion</td>
                        <td>@item.VecesAsignado</td>
                        <td>@item.Fecha</td>

                        <td><a class="btn btn-sm btn-outline-primary oi oi-eye" href="R_TiposDocumentos/@item.TipoDocumentoId">Ver</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</EditForm>

@code {
    public string? Filtro { get; set; }
    public string? Criterio { get; set; }
    public List<TiposDocumentos> lista { get; set; }= new List<TiposDocumentos>();
    public DateTime? desde { get; set; } = null;
    public DateTime? hasta { get; set; } = null;

    [Inject]
    public TiposDocumentosBLL TiposDocumentosBLL { get; set; }


    private void Buscar()
    {
        if (Criterio != null)
        {
            switch (Filtro)
            {
                case "0":
                    if(desde != null || hasta != null)
                        lista = TiposDocumentosBLL.GetList(p => p.TipoDocumentoId == int.Parse(Criterio) && (p.Fecha >= desde && p.Fecha <= hasta));
                    else
                        lista = TiposDocumentosBLL.GetList(p => p.TipoDocumentoId == int.Parse(Criterio) || (p.Fecha >= desde && p.Fecha <= hasta));
                    break;

                case "1":
                    if(desde != null || hasta != null)
                        lista = TiposDocumentosBLL.GetList(p => p.Descripcion.ToLower().Contains(Criterio.ToLower()) &&  (p.Fecha >= desde && p.Fecha <= hasta));
                    else
                        lista = TiposDocumentosBLL.GetList(p => p.Descripcion.ToLower().Contains(Criterio.ToLower()) || (p.Fecha >= desde && p.Fecha <= hasta));
                    break;
                 
                
            }
        }
        else
        {
            lista = TiposDocumentosBLL.GetList(c => true);
        }
    }





}